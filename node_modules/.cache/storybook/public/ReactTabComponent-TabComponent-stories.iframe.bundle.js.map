{"version":3,"file":"ReactTabComponent-TabComponent-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAdA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAEA;AAGA;AA9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://table---header-with-sub-header/./stories/ReactTabComponent/TabComponent.js","webpack://table---header-with-sub-header/./stories/ReactTabComponent/TabComponent.module.css","webpack://table---header-with-sub-header/./stories/ReactTabComponent/TabComponent.module.css?4def"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./TabComponent.module.css\";\n\nconst Tab = ({ id, title, isSelected, onClick, onKeyDown, textColor, tabBackground }) => (\n  <button\n    role=\"tab\"\n    id={id}\n    aria-controls={`tabpanel-${id}`}\n    aria-selected={isSelected}\n    onClick={() => onClick(id)}\n    onKeyDown={(event) => onKeyDown(id, event)}\n    tabIndex={isSelected ? 0 : -1}\n    style={{\n      color: textColor,\n      backgroundColor: isSelected ? tabBackground.selected : tabBackground.default,\n    }}\n  >\n    {title}\n  </button>\n);\n\nconst TabPanel = ({ id, isSelected, children, tabIndex }) => (\n  <div\n    role=\"tabpanel\"\n    id={`tabpanel-${id}`}\n    aria-labelledby={`${id}`}\n    hidden={!isSelected}\n    tabIndex={tabIndex}\n    data-expanded={isSelected}\n  >\n    {children}\n  </div>\n);\n\nexport const TabComponent = ({\n  tabs,\n  tabPanelTabindex,\n  triggerActivation = \"automated\",\n  textColor = \"rgba(0, 0, 0, 1)\",\n  tabBackground = {\n    default: \"rgba(209, 203, 219, 1)\",\n    selected: \"rgba(156, 39, 176, 1)\",\n  },\n}) => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n  const [isAccordionView, setIsAccordionView] = useState(window.innerWidth < 400);\n\n  const handleWindowResize = () => {\n    setIsAccordionView(window.innerWidth < 400);\n  };\n\n  const windowResizeEvent = useRef(null);\n\n  useEffect(() => {\n    windowResizeEvent.current = handleWindowResize;\n    window.addEventListener(\"resize\", windowResizeEvent.current);\n\n    return () => {\n      window.removeEventListener(\"resize\", windowResizeEvent.current);\n    };\n  }, []);\n\n  const handleKeyDown = (id, event) => {\n    const currentIndex = tabs.findIndex((tab) => tab.id === id);\n\n    if (event.key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = (currentIndex + 1) % tabs.length;\n      if (triggerActivation === \"automated\") {\n        setSelectedTab(tabs[nextIndex].id);\n      }\n      document.getElementById(tabs[nextIndex].id).focus();\n    } else if (event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = (currentIndex - 1 + tabs.length) % tabs.length;\n      if (triggerActivation === \"automated\") {\n        setSelectedTab(tabs[prevIndex].id);\n      }\n      document.getElementById(tabs[prevIndex].id).focus();\n    } else if (event.key === \"Home\") {\n      event.preventDefault();\n      if (triggerActivation === \"automated\") {\n        setSelectedTab(tabs[0].id);\n      }\n      document.getElementById(tabs[0].id).focus();\n    } else if (event.key === \"End\") {\n      event.preventDefault();\n      if (triggerActivation === \"automated\") {\n        setSelectedTab(tabs[tabs.length - 1].id);\n      }\n      document.getElementById(tabs[tabs.length - 1].id).focus();\n    } else if (\n      (event.key === \"Enter\" || event.key === \" \") &&\n      triggerActivation === \"manual\"\n    ) {\n      event.preventDefault();\n      setSelectedTab(id);\n    }\n  };\n\n  return (\n    <div className={styles.tabContainer}>\n      <div role=\"tablist\" aria-label=\"HTML and ARIA information\" className={styles.tabList}>\n        {tabs.map(({ id, title }) => (\n          <Tab\n            key={id}\n            id={id}\n            title={title}\n            isSelected={selectedTab === id}\n            onClick={() => setSelectedTab(id)}\n            onKeyDown={handleKeyDown}\n            textColor={textColor}\n            tabBackground={tabBackground}\n          />\n        ))}\n      </div>\n      {tabs.map(({ id, content }) => (\n        <TabPanel\n          key={id}\n          id={id}\n          isSelected={selectedTab === id}\n          tabIndex={tabPanelTabindex ? 0 : undefined}\n        >\n          {content}\n        </TabPanel>\n      ))}\n    </div>\n  );\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n    font-family: Arial, sans-serif;\\n    line-height: 1.5;\\n  }\\n  \\n  .Q4z_BGVIou7hYojtKxVQ {\\n    max-width: 800px;\\n    margin: 0 auto;\\n  }\\n  \\n  [role=\\\"tablist\\\"] {\\n    display: flex;\\n    border-bottom: 1px solid #ccc;\\n    padding-left: 0;\\n    list-style-type: none;\\n    margin: 0;\\n  }\\n  \\n  [role=\\\"tab\\\"] {\\n    flex-grow: 1;\\n    background: none;\\n    border: none;\\n    outline: none;\\n    cursor: pointer;\\n    padding: 10px;\\n    font-size: 16px;\\n    border-bottom: 3px solid transparent;\\n  }\\n  [role=\\\"tab\\\"]:focus-visible {\\n    border-bottom: 3px solid green;\\n  }\\n  [role=\\\"tab\\\"][aria-selected=\\\"true\\\"]:focus-visible {\\n    border-bottom: 3px solid blue;\\n  }\\n  \\n  [role=\\\"tab\\\"][aria-selected=\\\"true\\\"] {\\n    font-weight: bold;\\n    border-bottom-color: #9c27b0;\\n    background-color: #d1cbdb;\\n  }\\n  \\n  [role=\\\"tabpanel\\\"] {\\n    padding: 15px;\\n    border: 1px solid #ccc;\\n    border-top: none;\\n  }\\n  \\n  [role=\\\"tabpanel\\\"][hidden] {\\n    display: none;\\n  }\\n  \\n  /* Add this media query at the bottom of the TabComponent.module.css file */\\n\\n@media (max-width: 400px) {\\n  [role=\\\"tablist\\\"] {\\n    flex-direction: column;\\n  }\\n  [role=\\\"tab\\\"] {\\n    width: 100%;\\n    text-align: left;\\n  }\\n  [role=\\\"tabpanel\\\"] {\\n    display: none;\\n  }\\n  [role=\\\"tabpanel\\\"][data-expanded=\\\"true\\\"] {\\n    display: block;\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/ReactTabComponent/TabComponent.module.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,8BAA8B;IAC9B,gBAAgB;EAClB;;EAEA;IACE,gBAAgB;IAChB,cAAc;EAChB;;EAEA;IACE,aAAa;IACb,6BAA6B;IAC7B,eAAe;IACf,qBAAqB;IACrB,SAAS;EACX;;EAEA;IACE,YAAY;IACZ,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,eAAe;IACf,aAAa;IACb,eAAe;IACf,oCAAoC;EACtC;EACA;IACE,8BAA8B;EAChC;EACA;IACE,6BAA6B;EAC/B;;EAEA;IACE,iBAAiB;IACjB,4BAA4B;IAC5B,yBAAyB;EAC3B;;EAEA;IACE,aAAa;IACb,sBAAsB;IACtB,gBAAgB;EAClB;;EAEA;IACE,aAAa;EACf;;EAEA,2EAA2E;;AAE7E;EACE;IACE,sBAAsB;EACxB;EACA;IACE,WAAW;IACX,gBAAgB;EAClB;EACA;IACE,aAAa;EACf;EACA;IACE,cAAc;EAChB;AACF\",\"sourcesContent\":[\"body {\\n    font-family: Arial, sans-serif;\\n    line-height: 1.5;\\n  }\\n  \\n  .tab-container {\\n    max-width: 800px;\\n    margin: 0 auto;\\n  }\\n  \\n  [role=\\\"tablist\\\"] {\\n    display: flex;\\n    border-bottom: 1px solid #ccc;\\n    padding-left: 0;\\n    list-style-type: none;\\n    margin: 0;\\n  }\\n  \\n  [role=\\\"tab\\\"] {\\n    flex-grow: 1;\\n    background: none;\\n    border: none;\\n    outline: none;\\n    cursor: pointer;\\n    padding: 10px;\\n    font-size: 16px;\\n    border-bottom: 3px solid transparent;\\n  }\\n  [role=\\\"tab\\\"]:focus-visible {\\n    border-bottom: 3px solid green;\\n  }\\n  [role=\\\"tab\\\"][aria-selected=\\\"true\\\"]:focus-visible {\\n    border-bottom: 3px solid blue;\\n  }\\n  \\n  [role=\\\"tab\\\"][aria-selected=\\\"true\\\"] {\\n    font-weight: bold;\\n    border-bottom-color: #9c27b0;\\n    background-color: #d1cbdb;\\n  }\\n  \\n  [role=\\\"tabpanel\\\"] {\\n    padding: 15px;\\n    border: 1px solid #ccc;\\n    border-top: none;\\n  }\\n  \\n  [role=\\\"tabpanel\\\"][hidden] {\\n    display: none;\\n  }\\n  \\n  /* Add this media query at the bottom of the TabComponent.module.css file */\\n\\n@media (max-width: 400px) {\\n  [role=\\\"tablist\\\"] {\\n    flex-direction: column;\\n  }\\n  [role=\\\"tab\\\"] {\\n    width: 100%;\\n    text-align: left;\\n  }\\n  [role=\\\"tabpanel\\\"] {\\n    display: none;\\n  }\\n  [role=\\\"tabpanel\\\"][data-expanded=\\\"true\\\"] {\\n    display: block;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"tab-container\": \"Q4z_BGVIou7hYojtKxVQ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./TabComponent.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./TabComponent.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./TabComponent.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}