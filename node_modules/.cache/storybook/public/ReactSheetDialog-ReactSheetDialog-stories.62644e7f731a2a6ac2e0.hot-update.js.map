{"version":3,"file":"ReactSheetDialog-ReactSheetDialog-stories.62644e7f731a2a6ac2e0.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAGA;AAGA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA","sources":["webpack://table---header-with-sub-header/./stories/ReactSheetDialog/ReactSheetDialog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./ReactSheet.module.css\";\n\n// ReactSheetDialog component definition\nfunction ReactSheetDialog(props) {\n  // State to manage the open state of the sheet/dialog\n  const [open, setOpen] = useState(false);\n  \n  // Destructure modal and dialogType properties from props\n  const { modal, dialogType } = props;\n\n  // Function to open the sheet/dialog\n  const openSheet = () => {\n    setOpen(true);\n  };\n\n  // Function to close the sheet/dialog\n  const closeSheet = () => {\n    setOpen(false);\n  };\n\n  // ...\n\n  // Check if the dialogType is a standard dialog\n  const isStandardDialog = dialogType === \"standard\";\n\n  // Set CSS classes based on the open state and dialogType\n  const sheetClass = open ? styles.open : \"\";\n  const overlayClass = open && modal;\n  \n  // Update styles conditionally based on dialogType using classNames\n  const sheetStyle = classNames(styles.sheet, sheetClass, {\n    [styles.standardDialog]: isStandardDialog,\n  });\n\n  return (\n    <>\n      {/* Trigger button to open the sheet/dialog */}\n      <button\n        onClick={openSheet}\n        id=\"side-sheet-button\"\n        className={styles.sideSheetButton}\n      >\n        Open Sheet\n      </button>\n      {/* Overlay displayed when the sheet/dialog is open and modal */}\n      {overlayClass && (\n        <div className={styles.overlay} onClick={closeSheet}></div>\n      )}\n      {/* Sheet/Dialog element */}\n      <div\n        className={sheetStyle}\n        role=\"dialog\"\n        aria-labelledby=\"sheet-heading\"\n        {...(modal ? { 'aria-modal': true } : {})}\n        aria-hidden={!open}\n        onKeyDown={(event) => {\n          trapFocus(event);\n        }}\n      >\n        {/* Sheet/Dialog header */}\n        <div className={styles.sheetHeader}>\n          {/* Heading */}\n          <h2 id=\"sheet-heading\" className={styles.sheetHeading} tabIndex=\"-1\">\n            Sheet Dialog\n          </h2>\n\n          {/* Close button */}\n          <button className={styles.closeButton} onClick={closeSheet}>\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"var(--purple-900)\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M18.3 5.71a.996.996 0 00-1.41 0L12 10.59 7.11 5.7A.996.996 0 105.7 7.11L10.59 12 5.7 16.89a.996.996 0 101.41 1.41L12 13.41l4.89 4.89a.996.996 0 101.41-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"\n              />\n            </svg>\n          </button>\n        </div>\n        {/* Sheet/Dialog content */}\n        <div className={styles.sheetContent}>\n          <h3>Control Props</h3>\n          <p>\n            This component has two control props: <code>modal</code> and <code>dialogType</code>.\n          </p>\n          <ul>\n            <li>\n              <code>modal</code>: Determines if the sheet/dialog</li>\n<li>\n<code>dialogType</code>: Defines the type of dialog to display, either \"sheet\" or \"standard\". It accepts a string value (default: \"sheet\").\n</li>\n</ul>\n<h3>When to Use Sheet and Standard Dialogs</h3>\n<p>\nBoth sheet and standard dialogs can be used to display additional content, prompt user input, or present options in a separate layer. However, they serve different purposes based on the context and user experience you want to achieve.\n</p>\n<h4>Sheet Dialog</h4>\n<p>\nSheet dialogs are ideal for displaying content or actions related to the current context or page. They usually slide in from the edge of the screen and cover only a portion of the content, allowing the user to maintain a connection with the underlying page. Sheet dialogs are typically used for navigation menus, filters, or contextual actions on larger screens.\n</p>\n<h4>Standard Dialog</h4>\n<p>\nStandard dialogs are used to display more critical information, prompt user input, or present actions that require the user's full attention. They usually appear in the center of the screen, with a backdrop that prevents interaction with the content underneath. Use standard dialogs for confirmation dialogs, user input forms, or when the user must complete an action before proceeding.\n</p>\n</div>\n</div>\n</>\n);\n}\n\nexport default ReactSheetDialog;\n"],"names":[],"sourceRoot":""}