{"version":3,"file":"ReactMultiSelect-ReactMultiSelect-stories.4e0f056aa4ce56a4ed8d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AASA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AAGA;AA5DA;AA8DA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA","sources":["webpack://table---header-with-sub-header/./stories/ReactMultiSelect/ReactMultiSelect.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ariaAnnounce from './ariaAnnounce';\nimport useKeyboardNavigation from './keyboardNavigation';\nimport styles from './ReactMultiSelect.module.css';\n\nconst veganIngredients = [\n  'Tofu',\n  'Almond Milk',\n  'Avocado',\n  'Quinoa',\n  'Kale',\n  'Lentils'\n];\n\nconst ReactMultiSelect = ({ selectionModel }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [isListboxOpen, setListboxOpen] = useState(false);\n\n  const listboxRef = useRef(null);\n  // define handleSelectOption first\nconst handleSelectOption = (option) => {\n  let newSelectedOptions;\n  if (selectionModel === 'alternative') {\n    newSelectedOptions = [option];\n  } else {\n    newSelectedOptions = selectedOptions.includes(option)\n      ? selectedOptions.filter((item) => item !== option)\n      : [...selectedOptions, option];\n  }\n  setSelectedOptions(newSelectedOptions);\n  ariaAnnounce(`Selected ${newSelectedOptions.length} items.`);\n};\n\n// now you can pass it to useKeyboardNavigation\nconst handleKeyDown = useKeyboardNavigation(isListboxOpen, listboxRef, handleSelectOption, selectionModel);\n\n  const handleDismissOption = (option) => {\n    const newSelectedOptions = selectedOptions.filter((item) => item !== option);\n    setSelectedOptions(newSelectedOptions);\n    ariaAnnounce(`Removed ${option}. ${newSelectedOptions.length} items remaining.`);\n  };\n\n  return (\n    <div className={styles['multi-select-container']}>\n      <div className={styles['selected-options']}>\n        {selectedOptions.map((option, index) => (\n          <button key={index} onClick={() => handleDismissOption(option)}>{option}</button>\n        ))}\n      </div>\n      <button onClick={() => setListboxOpen(!isListboxOpen)}>Toggle Listbox</button>\n      {isListboxOpen && (\n        <ul\n          ref={listboxRef}\n          className={styles['listbox']}\n          role=\"listbox\"\n          aria-label=\"Ingredients\"\n          tabIndex=\"0\"\n          onKeyDown={handleKeyDown}\n        >\n          {veganIngredients.map((option, index) => (\n            <li\n              key={index}\n              role=\"option\"\n              aria-selected={selectedOptions.includes(option)}\n              className={classNames(styles['listbox-option'], { [styles['selected']]: selectedOptions.includes(option) })}\n              onClick={() => handleSelectOption(option)}\n            >\n              {option}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nReactMultiSelect.propTypes = {\n  selectionModel: PropTypes.oneOf(['default', 'alternative']),\n};\n\nReactMultiSelect.defaultProps = {\n  selectionModel: 'default',\n};\n\nexport default ReactMultiSelect;"],"names":[],"sourceRoot":""}