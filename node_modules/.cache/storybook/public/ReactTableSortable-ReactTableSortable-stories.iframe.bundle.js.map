{"version":3,"file":"ReactTableSortable-ReactTableSortable-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAyDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AAAA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAOA;AAAA;AACA;AAIA;AAEA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AAGA;AApKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsKA;;;;;;;;;;;;;;;;;;AC1KA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://table---header-with-sub-header/./stories/ReactTableSortable/ReactTableSortable.js","webpack://table---header-with-sub-header/./stories/ReactTableSortable/ReactTableSortableControl.js","webpack://table---header-with-sub-header/./stories/ReactTableSortable/styles.css","webpack://table---header-with-sub-header/./stories/ReactTableSortable/styles.css?9c32"],"sourcesContent":["//ReactTableSortable.js\nimport React, { useState, useCallback } from 'react';\nimport './styles.css';\n\nexport const ReactTableSortable = ({ sortable }) => {\n    // Initialize tableData with initial data.\n    const [tableData, setTableData] = useState([\n      [\n        \"P4\",\n        \"TNC000131015\",\n        \"Alok Nagar\",\n        \"Infrastructure Upgrade\",\n        \"In Progress\",\n        \"Chennai\",\n        \"Sampark Technologies\",\n        \"30 Aug 2022 10am\",\n        \"Rahul Varma\"\n      ],\n      [\n        \"P3\",\n        \"TNC000119453\",\n        \"Pratap Enclave\",\n        \"Network Expansion\",\n        \"Completed\",\n        \"Kolkata\",\n        \"FastNet Communications\",\n        \"13 Jul 2022 3pm\",\n        \"Aditi Chatterjee\"\n      ],\n      [\n        \"P2\",\n        \"TNC000254981\",\n        \"Kima\",\n        \"Database migration\",\n        \"In Progress\",\n        \"London\",\n        \"Michael Brown\",\n        \"18 Oct 2022 9am\",\n        \"David Johnson\"\n      ],\n      [\n        \"P1\",\n        \"TNC000325789\",\n        \"Zara\",\n        \"Frontend refactoring\",\n        \"Not Started\",\n        \"Tokyo\",\n        \"Lisa White\",\n        \"10 Nov 2022 11am\",\n        \"Emily Green\"\n      ],\n      [\n        \"P4\",\n        \"TNC000411568\",\n        \"Xeno\",\n        \"Backend integration\",\n        \"Completed\",\n        \"Sydney\",\n        \"Robert Taylor\",\n        \"22 Dec 2022 3pm\",\n        \"William Wilson\"\n      ]\n    ]);\n    // Initialize sortedColumn state with a default sorting configuration.\n    const [sortedColumn, setSortedColumn] = useState({\n      index: null,\n      ascending: true\n    });\n    const [showChevron, setShowChevron] = useState(null);\n  \n    // Helper function to get cell value at given row and idx.\n    const getCellValue = (row, idx) => row[idx];\n    // Function factory to generate a comparer function for sorting table data.\n    const comparer = (idx, asc) => (a, b) =>\n      ((v1, v2) =>\n        v1 !== \"\" && v2 !== \"\" && !isNaN(v1) && !isNaN(v2)\n          ? v1 - v2\n          : v1.toString().localeCompare(v2))(\n        getCellValue(asc ? a : b, idx),\n        getCellValue(asc ? b : a, idx)\n      );\n      \n      // Function wrapped in useCallback that handles header button click to sort table.\n      const onHeaderButtonClick = useCallback(\n        (index) => {\n          if (sortable === \"Sort\") {\n            // Update sortedColumn state and sort tableData based on new sorting configuration.\n            setSortedColumn((prevSortedColumn) => {\n              // Logic to determine if the same column is clicked or a different one.\n              const isSameColumn = prevSortedColumn.index === index;\n              const ascending = isSameColumn ? !prevSortedColumn.ascending : true;\n              setTableData((prevData) =>\n                [...prevData].sort(comparer(index, ascending))\n              );\n              return { index, ascending };\n            });\n          }\n        },\n        [sortable]\n      );\n  \n    // Render table with sortedColumn state and onHeaderButtonClick event handler.\n    // The table header rendering based on the sortable prop.\n  return (\n    <table>\n    <caption>Development Bugs Progress Table <br /><span className=\"sr-only\">Click the button in each header cell to sort the table by ascending or descending.</span></caption>\n      <thead>\n        <tr>\n          {[\n            \"Priority\",\n            \"Number\",\n            \"Your reference\",\n            \"Brief summary\",\n            \"Status\",\n            \"Location\",\n            \"Assigned to\",\n            \"Estimated resolution\",\n            \"Raised by\"\n          ].map((header, index) => (\n            <th\n              key={header}\n              id={`${header.replace(/\\s+/g, \"-\").toLowerCase()}-${index}`}\n              {...(sortedColumn.index === index && sortable === \"Sort\"\n                ? {\n                    \"aria-sort\": sortedColumn.ascending\n                      ? \"ascending\"\n                      : \"descending\"\n                  }\n                : {})}\n            >\n              {sortable === \"Sort\" ? (\n                <button\n                  onMouseEnter={() => setShowChevron(index)}\n                  onMouseLeave={() => setShowChevron(null)}\n                  onFocus={() => setShowChevron(index)}\n                  onBlur={() => setShowChevron(null)}\n                  onClick={() => onHeaderButtonClick(index)}\n                >\n                  {header}\n                  <span\n                    className={`chevron ${\n                      showChevron === index || sortedColumn.index === index\n                        ? sortedColumn.index === index && sortedColumn.ascending\n                          ? \"up\"\n                          : \"down\"\n                        : \"hidden\"\n                    }`}\n                    aria-hidden=\"true\"\n                  />\n                </button>\n              ) : (\n                header\n              )}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {tableData.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, cellIndex) => (\n              <td key={cellIndex}>{cell}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ReactTableSortable;","//ReactTableSortableControl.js\nimport React from 'react';\nimport ReactTableSortable from './ReactTableSortable';\n\nconst ReactTableSortableControl = ({ sortable }) => {\n  // Add any custom logic for the component here.\n\n  return <ReactTableSortable sortable={sortable} />;\n};\n\nexport default ReactTableSortableControl;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n    font-family: \\\"Segoe UI\\\", -apple-system, BlinkMacSystemFont, Roboto,\\n      Oxygen-Sans, Ubuntu, Cantarell, \\\"Helvetica Neue\\\", sans-serif;\\n    line-height: 1.5;\\n  }\\n  table {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n  caption{\\n    font-size:1.4em;\\n    text-align: left;\\n    margin-bottom: 0.5em;\\n  }\\n  caption > span{\\n    font-size: 0.875em;\\n  }\\n  th,\\n  td {\\n    padding: 1em;\\n    text-align: left;\\n    border: 1px solid black;\\n  }\\n  th {\\n    position: relative;\\n    background-color: #f2f2f2;\\n  }\\n  button {\\n    width: 100%;\\n    height: 100%;\\n    padding: 8px;\\n    background-color: transparent;\\n    border: none;\\n    font: inherit;\\n    text-align: inherit;\\n    cursor: pointer;\\n  }\\n  button:focus {\\n    outline: none;\\n    box-shadow: inset 0 0 0 2px #3f51b5;\\n  }\\n  button {\\n    position: relative;\\n  }\\n  \\n  .chevron {\\n    display: none;\\n    width: 0;\\n    height: 0;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    border-bottom: 6px solid currentColor;\\n    margin-left: 5px;\\n    /*visibility: hidden;*/\\n  }\\n  \\n  button:hover .chevron,\\n  button:focus .chevron,\\n  .chevron.sorted {\\n    display: inline-block;\\n  }\\n  \\n  .chevron.up {\\n    transform: scaleY(-1);\\n  }\\n  .sr-only {\\n    position: absolute;\\n    width: 1px;\\n    height: 1px;\\n    padding: 0;\\n    margin: -1px;\\n    overflow: hidden;\\n    clip: rect(0, 0, 0, 0);\\n    white-space: nowrap;\\n    border: 0;\\n  }\\n  \", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/ReactTableSortable/styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI;kEAC8D;IAC9D,gBAAgB;EAClB;EACA;IACE,WAAW;IACX,yBAAyB;EAC3B;EACA;IACE,eAAe;IACf,gBAAgB;IAChB,oBAAoB;EACtB;EACA;IACE,kBAAkB;EACpB;EACA;;IAEE,YAAY;IACZ,gBAAgB;IAChB,uBAAuB;EACzB;EACA;IACE,kBAAkB;IAClB,yBAAyB;EAC3B;EACA;IACE,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,6BAA6B;IAC7B,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,eAAe;EACjB;EACA;IACE,aAAa;IACb,mCAAmC;EACrC;EACA;IACE,kBAAkB;EACpB;;EAEA;IACE,aAAa;IACb,QAAQ;IACR,SAAS;IACT,kCAAkC;IAClC,mCAAmC;IACnC,qCAAqC;IACrC,gBAAgB;IAChB,sBAAsB;EACxB;;EAEA;;;IAGE,qBAAqB;EACvB;;EAEA;IACE,qBAAqB;EACvB;EACA;IACE,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,UAAU;IACV,YAAY;IACZ,gBAAgB;IAChB,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;EACX\",\"sourcesContent\":[\"body {\\n    font-family: \\\"Segoe UI\\\", -apple-system, BlinkMacSystemFont, Roboto,\\n      Oxygen-Sans, Ubuntu, Cantarell, \\\"Helvetica Neue\\\", sans-serif;\\n    line-height: 1.5;\\n  }\\n  table {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n  caption{\\n    font-size:1.4em;\\n    text-align: left;\\n    margin-bottom: 0.5em;\\n  }\\n  caption > span{\\n    font-size: 0.875em;\\n  }\\n  th,\\n  td {\\n    padding: 1em;\\n    text-align: left;\\n    border: 1px solid black;\\n  }\\n  th {\\n    position: relative;\\n    background-color: #f2f2f2;\\n  }\\n  button {\\n    width: 100%;\\n    height: 100%;\\n    padding: 8px;\\n    background-color: transparent;\\n    border: none;\\n    font: inherit;\\n    text-align: inherit;\\n    cursor: pointer;\\n  }\\n  button:focus {\\n    outline: none;\\n    box-shadow: inset 0 0 0 2px #3f51b5;\\n  }\\n  button {\\n    position: relative;\\n  }\\n  \\n  .chevron {\\n    display: none;\\n    width: 0;\\n    height: 0;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    border-bottom: 6px solid currentColor;\\n    margin-left: 5px;\\n    /*visibility: hidden;*/\\n  }\\n  \\n  button:hover .chevron,\\n  button:focus .chevron,\\n  .chevron.sorted {\\n    display: inline-block;\\n  }\\n  \\n  .chevron.up {\\n    transform: scaleY(-1);\\n  }\\n  .sr-only {\\n    position: absolute;\\n    width: 1px;\\n    height: 1px;\\n    padding: 0;\\n    margin: -1px;\\n    overflow: hidden;\\n    clip: rect(0, 0, 0, 0);\\n    white-space: nowrap;\\n    border: 0;\\n  }\\n  \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}