"use strict";
self["webpackHotUpdatetable_header_with_sub_header"]("ReactMulti-Select-Checkboxes-ReactMulti-Select-Checkboxes-stories",{

/***/ "./stories/ReactMulti-Select-Checkboxes/ReactMulti-Select-Checkboxes.js":
/*!******************************************************************************!*\
  !*** ./stories/ReactMulti-Select-Checkboxes/ReactMulti-Select-Checkboxes.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ReactMulti_Select_Checkboxes_module_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ReactMulti-Select-Checkboxes.module.css */ "./stories/ReactMulti-Select-Checkboxes/ReactMulti-Select-Checkboxes.module.css");
/* harmony import */ var _ariaAnnounce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ariaAnnounce */ "./stories/ReactMulti-Select-Checkboxes/ariaAnnounce.js");
/* harmony import */ var _keyboardNavigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./keyboardNavigation */ "./stories/ReactMulti-Select-Checkboxes/keyboardNavigation.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");






const ReactMultiSelectCheckboxes = ({
  selectionModel
}) => {
  const isAlternativeSelectionModel = selectionModel === "alternative";
  const [expanded, setExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [checkCount, setCheckCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const catBreedGroup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const checkboxesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);
  const totalCheckboxes = 3;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const handleClickOutside = event => {
      if (catBreedGroup.current && !catBreedGroup.current.contains(event.target)) {
        setExpanded(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);
  const onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(event => {
    (0,_keyboardNavigation__WEBPACK_IMPORTED_MODULE_3__["default"])(event, checkboxesRef.current, updateCheckCount, isAlternativeSelectionModel);
  }, [updateCheckCount, isAlternativeSelectionModel]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    checkboxesRef.current.forEach(checkbox => checkbox.addEventListener("keydown", onKeyDown));
    return () => {
      checkboxesRef.current.forEach(checkbox => checkbox.removeEventListener("keydown", onKeyDown));
    };
  }, [onKeyDown]);
  const toggleDisclosure = () => {
    setExpanded(!expanded);
  };
  const updateCheckCount = event => {
    const targetCheckbox = event.target;
    const isChecked = targetCheckbox.checked;
    if (isAlternativeSelectionModel) {
      checkboxesRef.current.forEach(checkbox => {
        if (checkbox !== targetCheckbox) {
          checkbox.checked = false;
        }
      });
      targetCheckbox.checked = !isChecked;
      setCheckCount(!isChecked ? 1 : 0);
    } else {
      const newCheckCount = isChecked ? checkCount + 1 : checkCount - 1;
      setCheckCount(newCheckCount);
    }
    (0,_ariaAnnounce__WEBPACK_IMPORTED_MODULE_4__["default"])(`${checkCount} of ${totalCheckboxes} checkboxes checked`);
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div", {
    className: _ReactMulti_Select_Checkboxes_module_css__WEBPACK_IMPORTED_MODULE_1__["default"].container,
    ref: catBreedGroup,
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button", {
      type: "button",
      "aria-expanded": expanded,
      onClick: toggleDisclosure,
      children: `Cat Breeds (${checkCount} selected)`
    }), expanded && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("ul", {
      className: _ReactMulti_Select_Checkboxes_module_css__WEBPACK_IMPORTED_MODULE_1__["default"].checkboxesList,
      children: ["Bengal", "Siamese", "Persian"].map((breed, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("li", {
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input", {
          type: "checkbox",
          name: "catBreed",
          id: `catBreed${index + 1}`,
          value: breed,
          onChange: updateCheckCount,
          ref: el => checkboxesRef.current[index] = el
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("label", {
          htmlFor: `catBreed${index + 1}`,
          children: breed
        })]
      }, breed))
    })]
  });
};
ReactMultiSelectCheckboxes.displayName = "ReactMultiSelectCheckboxes";
ReactMultiSelectCheckboxes.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "ReactMultiSelectCheckboxes"
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ReactMultiSelectCheckboxes);

/***/ })

});
//# sourceMappingURL=ReactMulti-Select-Checkboxes-ReactMulti-Select-Checkboxes-stories.3c8ae26d9f9d399a58c4.hot-update.js.map