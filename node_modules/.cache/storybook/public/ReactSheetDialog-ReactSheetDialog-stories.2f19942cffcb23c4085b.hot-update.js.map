{"version":3,"file":"ReactSheetDialog-ReactSheetDialog-stories.2f19942cffcb23c4085b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA","sources":["webpack://table---header-with-sub-header/./stories/ReactSheetDialog/ReactSheetDialog.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styles from './ReactSheet.module.css';\n\nfunction ReactSheetDialog(props) {\n  const [open, setOpen] = useState(false);\n  const { modal } = props;\n  const sheetRef = useRef(null);\n  const sheetHeadingRef = useRef(null);\n  const closeButtonRef = useRef(null);\n\n  const openSheet = () => {\n    setOpen(true);\n    sheetHeadingRef.current.focus();\n  };\n\n  const closeSheet = () => {\n    setOpen(false);\n    closeButtonRef.current.focus();\n  };\n\n  const handleEscKey = (event) => {\n    if (event.key === 'Escape') {\n      closeSheet();\n    }\n  };\n\n  const trapFocus = (event) => {\n    if (!open) {\n      return;\n    }\n\n    const isTabPressed = event.key === 'Tab' || event.keyCode === 9;\n\n    if (!isTabPressed) {\n      return;\n    }\n\n    const trapEl = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n    const trapContent = sheetRef.current.querySelectorAll(trapEl);\n    const firstTrapEl = trapContent[0];\n    const lastTrapEl = trapContent[trapContent.length - 1];\n\n    if (event.shiftKey) {\n      if (document.activeElement === firstTrapEl) {\n        lastTrapEl.focus();\n        event.preventDefault();\n      }\n    } else {\n      if (document.activeElement === lastTrapEl) {\n        firstTrapEl.focus();\n        event.preventDefault();\n      }\n    }\n\n    if (!sheetHeadingRef.current.contains(event.target)) {\n      event.stopPropagation();\n      sheetHeadingRef.current.focus();\n    }\n  };\n\n  const modalClass = modal ? styles.modal : '';\n  const sheetClass = open ? styles.open : '';\n\n  return (\n    <>\n      <button onClick={openSheet}>Open Sheet</button>\n      <p>Other page content, links ETC.</p>\n<p>For more information on how to create accessible sheets, check out the following resources:</p>\n    <ul>\n      <li><a href=\"https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal\">WAI-ARIA Authoring Practices: Dialog Modal</a></li>\n    </ul>\n\n      <div\n        className={`${styles.sheet} ${modalClass} ${sheetClass}`}\n        role=\"dialog\"\n        aria-modal={modal}\n        aria-hidden={!open}\n        onKeyDown={trapFocus}\n        ref={sheetRef}\n      >\n        <div className={styles.sheetHeader}>\n          <h2 id=\"sheet-heading\" className={styles.sheetHeading} tabIndex=\"-1\" ref={sheetHeadingRef}>\n            Sheet Dialog\n          </h2>\n          <button className={styles.closeButton} onClick={closeSheet} ref={closeButtonRef}>\n            &times;\n          </button>\n        </div>\n        <div className={styles.sheetContent}>\n          <p>This is the sheet dialog content.</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ReactSheetDialog;"],"names":[],"sourceRoot":""}