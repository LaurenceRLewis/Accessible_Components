"use strict";
self["webpackHotUpdatetable_header_with_sub_header"]("ReactMultiSelect-ReactMultiSelect-stories",{

/***/ "./stories/ReactMultiSelect/keyboardNavigation.js":
/*!********************************************************!*\
  !*** ./stories/ReactMultiSelect/keyboardNavigation.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const useKeyboardNavigation = (isListboxOpen, listboxRef, handleSelectOption, selectionModel) => {
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isListboxOpen && listboxRef.current) {
      listboxRef.current.focus();
    }
  }, [isListboxOpen, listboxRef]);
  const handleKeyDown = event => {
    const {
      key
    } = event;
    const currentIndex = Array.from(listboxRef.current.children).findIndex(child => child === document.activeElement);
    if (key === 'ArrowUp' || key === 'ArrowDown') {
      event.preventDefault();
      const nextIndex = key === 'ArrowUp' ? currentIndex - 1 : currentIndex + 1;
      if (nextIndex >= 0 && nextIndex < listboxRef.current.children.length) {
        listboxRef.current.children[nextIndex].focus();
      }
    }
    // If the selection model is 'default', Space or Enter key will select or deselect the option.
    else if ((key === ' ' || key === 'Enter') && selectionModel === 'default') {
      event.preventDefault();
      handleSelectOption(document.activeElement.textContent);
    }
    // If selection model is 'alternative', Space or Enter key will select the option and deselect others.
    else if ((key === ' ' || key === 'Enter') && selectionModel === 'alternative') {
      event.preventDefault();
      handleSelectOption(document.activeElement.textContent);
    }
  };
  return handleKeyDown;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useKeyboardNavigation);

/***/ })

});
//# sourceMappingURL=ReactMultiSelect-ReactMultiSelect-stories.b266f53752fdc3285c30.hot-update.js.map