{"version":3,"file":"ReactAccordion-ReactAccordion-stories.a185010d00e2a847a660.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AApEA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://table---header-with-sub-header/./stories/ReactAccordion/ReactAccordion.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nconst ChevronUp = () => (\n  <svg aria-hidden=\"true\" viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\n    <path d=\"M5 8l5 5 5-5H5z\" fill=\"currentColor\" />\n  </svg>\n);\n\nconst ChevronDown = () => (\n  <svg aria-hidden=\"true\" viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\n    <path d=\"M5 12l5-5 5 5H5z\" fill=\"currentColor\" />\n  </svg>\n);\n\nexport const ReactAccordion = ({ items, groupName, multiExpand, keyboardControl }) => {\n  const [activeIndices, setActiveIndices] = useState([]);\n\n  const onTitleClick = (index) => {\n    if (multiExpand) {\n      setActiveIndices((prevIndices) =>\n        prevIndices.includes(index)\n          ? prevIndices.filter((i) => i !== index)\n          : [...prevIndices, index]\n      );\n    } else {\n      setActiveIndices(index === activeIndices[0] ? [] : [index]);\n    }\n  };\n\n  const onTitleKeyDown = (event, index) => {\n    if (!keyboardControl) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (key === \"Enter\" || key === \" \") {\n      onTitleClick(index);\n      event.preventDefault();\n    } else if (key === \"ArrowDown\" || key === \"ArrowUp\") {\n      const newIndex =\n        key === \"ArrowDown\"\n          ? (index + 1) % items.length\n          : (index - 1 + items.length) % items.length;\n      const newButton = document.getElementById(\n        `${groupName}-heading-${newIndex}`\n      );\n      newButton.focus();\n      event.preventDefault();\n    } else if (key === \"Home\") {\n      const firstButton = document.getElementById(`${groupName}-heading-0`);\n      firstButton.focus();\n      event.preventDefault();\n    } else if (key === \"End\") {\n      const lastButton = document.getElementById(\n        `${groupName}-heading-${items.length - 1}`\n      );\n      lastButton.focus();\n      event.preventDefault();\n    }\n  };\n\n  const renderedItems = items.map((item, index) => {\n    const active = activeIndices.includes(index) ? 'active' : '';\n\n    return (\n      <div className={`accordion-item ${active}`} key={index}>\n        <button\n          id={`${groupName}-heading-${index}`}\n          className=\"accordion-title\"\n          onClick={() => onTitleClick(index)}\n          onKeyDown={(event) => onTitleKeyDown(event, index)}\n        >\n          {item.title}\n          {active ? <ChevronUp /> : <ChevronDown />}\n        </button>\n        <div className=\"accordion-content\">{item.content}</div>\n      </div>\n    );\n  });\n\n  return <div className=\"accordion\">{renderedItems}</div>;\n};\n"],"names":[],"sourceRoot":""}