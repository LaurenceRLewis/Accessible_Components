{"version":3,"file":"ReactTableSubHeader-ReactTableSubHeader-stories.1851fb11d78256f816c7.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAKA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAGA;AA9CA;AAgDA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA","sources":["webpack://table---header-with-sub-header/./stories/ReactTableSubHeader/ReactTableSubHeader.js"],"sourcesContent":["import React from 'react';\nimport './styles.css';\nimport PropTypes from 'prop-types';\n\n//Props\nconst ReactTableSubHeader = ({ colspan, subColspan, headers, data, headerBackgroundColor, headerTextColor, tdFontWeight }) => {\n  return (\n    <table className=\"tl-container-table\">\n      <thead>\n        <tr>\n          {headers.map((header, index) => (\n            <th\n              key={index}\n              className=\"tl-header\"\n              id={header.id}\n              colSpan={colspan[index] > 1 ? colspan[index] : undefined}\n              style={{ backgroundColor: headerBackgroundColor, color: headerTextColor }}\n            >\n              {header.name}\n            </th>\n          ))}\n        </tr>\n        <tr>\n          {headers.map((header, index) => (\n            subColspan[index] > 1 ? (\n              <th\n                key={index}\n                className=\"tl-sub-header\"\n                headers={header.id}\n                colSpan={subColspan[index]}\n              >\n                {header.subName}\n              </th>\n            ) : null\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={rowIndex} className=\"tl-raw-unfocus\">\n            {row.map((cell, cellIndex) => (\n              //Expression\n              <td key={cellIndex} className=\"tl-data\" style={{ fontWeight: tdFontWeight }}>\n                {cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nReactTableSubHeader.propTypes = {\n  colspan: PropTypes.arrayOf(PropTypes.number).isRequired,\n  subColspan: PropTypes.arrayOf(PropTypes.number).isRequired,\n  headers: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      subName: PropTypes.string,\n    })\n  ).isRequired,\n  data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\n  headerBackgroundColor: PropTypes.string,\n  headerTextColor: PropTypes.string,\n  tdFontWeight: PropTypes.oneOf([400, 700]),\n};\n\nReactTableSubHeader.defaultProps = {\n  headerBackgroundColor: 'inherit',\n  headerTextColor: 'inherit',\n  tdFontWeight: 400,\n};\n\n\nexport default ReactTableSubHeader;\n\n"],"names":[],"sourceRoot":""}