{"version":3,"file":"ReactSheetDialog-ReactSheetDialog-stories.0eec708875a04e3ead13.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAMA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA","sources":["webpack://table---header-with-sub-header/./stories/ReactSheetDialog/ReactSheetDialog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport classNames from \"classnames\";\nimport SheetDialogContent from \"./SheetDialogContent\";\nimport StandardDialogContent from \"./StandardDialogContent\";\nimport styles from \"./ReactSheet.module.css\";\n\nfunction ReactSheetDialog(props) {\n  // Declare state variable for sheet/dialog open state\n  const [open, setOpen] = useState(false);\n  // Destructure the modal and dialogType props\n  const { modal, dialogType } = props;\n\n  // Function to open the sheet/dialog\n  const openSheet = () => {\n    setOpen(true);\n  };\n\n  // Function to close the sheet/dialog\n  const closeSheet = () => {\n    setOpen(false);\n  };\n\n  //Esc key closes modal only\n  // const handleEscKey = (event) => {\n  //   if (event.key === \"Escape\" && open && modal) {\n  //     closeSheet();\n  //   }\n  // };\n\n  //Esc key closes modal and non-modal\n  const handleEscKey = (event) => {\n    if (event.key === \"Escape\" && open) {\n      closeSheet();\n    }\n  };\n\n  const isStandardDialog = dialogType === \"standard\";\n  // Determine the sheet class based on the open state\n  const sheetOpenClass = open ? styles.open : \"\";\n  // Determine if the overlay should be displayed\n  const overlayClass = open && modal;\n  // Combine sheet classes based on the dialog type\n  const sheetStyle = classNames(\n    styles.sheet,\n    {\n      [styles.standardDialog]: isStandardDialog,\n      [styles.sheetModal]: !isStandardDialog,\n      [styles.hidden]: !open,\n    },\n    sheetOpenClass\n  );\n\n  // Function to apply or remove 'aria-hidden' attribute on elements outside the dialog\n  const setAriaHiddenOnSiblings = (isOpen) => {\n    const rootNode = ReactDOM.findDOMNode(props.rootNode || document.body);\n    const siblings = Array.from(rootNode.children).filter(\n      (child) => child !== rootNode\n    );\n\n    siblings.forEach((sibling) => {\n      if (isOpen) {\n        sibling.setAttribute(\"aria-hidden\", \"true\");\n      } else {\n        sibling.removeAttribute(\"aria-hidden\");\n      }\n    });\n  };\n\n  // Add event listener for keydown events to handle Esc key press\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleEscKey);\n    return () => {\n      window.removeEventListener(\"keydown\", handleEscKey);\n    };\n  }, [handleEscKey]);\n\n  // Set focus on the sheet heading when the sheet/dialog opens\n  useEffect(() => {\n    if (open) {\n      document.getElementById(\"sheet-heading\").focus();\n    }\n  }, [open]);\n\n  // Add an effect to return focus to the triggering button when sheet/dialog is closed\n  useEffect(() => {\n    if (!open) {\n      const sideSheetButton = document.getElementById(\"side-sheet-button\");\n      if (sideSheetButton) {\n        sideSheetButton.focus();\n      }\n    }\n  }, [open]);\n\n  // Apply or remove 'aria-hidden' attribute on elements outside the dialog when the modal is open or closed\n  useEffect(() => {\n    if (modal) {\n      setAriaHiddenOnSiblings(open);\n    }\n  }, [modal, open]);\n\n  const trapFocus = (event) => {\n    if (!open || !modal) {\n      return;\n    }\n\n    const isTabPressed = event.key === \"Tab\" || event.keyCode === 9;\n\n    if (!isTabPressed) {\n      return;\n    }\n\n    const focusableElements =\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n    const focusableContent = document.querySelectorAll(focusableElements);\n    const trapElements = Array.from(focusableContent).filter(\n      (el) => el.offsetParent !== null\n    );\n\n    const firstTrapEl = trapElements[0];\n    const lastTrapEl = trapElements[trapElements.length - 1];\n\n    if (event.shiftKey) {\n      if (document.activeElement === firstTrapEl) {\n        lastTrapEl.focus();\n        event.preventDefault();\n      }\n    } else {\n      if (document.activeElement === lastTrapEl) {\n        firstTrapEl.focus();\n        event.preventDefault();\n      }\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={openSheet}\n        id=\"side-sheet-button\"\n        className={styles.sideSheetButton}\n      >\n        Open Sheet\n      </button>\n      {overlayClass && <div className={styles.overlay}></div>}\n      <div\n        className={sheetStyle}\n        role=\"dialog\"\n        aria-labelledby=\"sheet-heading\"\n        {...(modal ? { \"aria-modal\": true } : {})}\n        {...(open ? {} : { \"aria-hidden\": \"true\" })}\n        onKeyDown={(event) => {\n          trapFocus(event);\n        }}\n      >\n        <div className={styles.sheetHeader}>\n          <h2 id=\"sheet-heading\" className={styles.sheetHeading} tabIndex=\"-1\">\n            Sheet Dialog\n          </h2>\n          <button className={styles.closeButton} onClick={closeSheet}>\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M6 18L18 6M6 6L18 18\"\n                stroke=\"#7B61C4\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div\n          className={`${styles.sheetContent} ${styles.contentContainer}`}\n          tabIndex={0}\n        >\n          {isStandardDialog ? (\n            <StandardDialogContent />\n          ) : (\n            <SheetDialogContent />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ReactSheetDialog;\n"],"names":[],"sourceRoot":""}