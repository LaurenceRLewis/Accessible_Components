{"version":3,"file":"ReactMultiSelect-ReactMultiSelect-stories.f852dbaed7bdadb1174b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AASA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAGA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AAGA;AAxEA;AA0EA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA","sources":["webpack://table---header-with-sub-header/./stories/ReactMultiSelect/ReactMultiSelect.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ariaAnnounce from './ariaAnnounce';\nimport useKeyboardNavigation from './keyboardNavigation';\nimport styles from './ReactMultiSelect.module.css';\n\nconst veganIngredients = [\n  'Tofu',\n  'Almond Milk',\n  'Avocado',\n  'Quinoa',\n  'Kale',\n  'Lentils'\n];\n\nconst ReactMultiSelect = ({ selectionModel }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [isListboxOpen, setListboxOpen] = useState(false);\n  const listboxRef = useRef(null);\n\n  useEffect(() => {\n    if (isListboxOpen && listboxRef.current.children.length > 0) {\n      listboxRef.current.children[0].focus();\n    }\n  }, [isListboxOpen]);\n\n  const handleSelectOption = (option) => {\n    let newSelectedOptions;\n    if (selectionModel === 'alternative') {\n      newSelectedOptions = [option];\n    } else {\n      newSelectedOptions = selectedOptions.includes(option)\n        ? selectedOptions.filter((item) => item !== option)\n        : [...selectedOptions, option];\n    }\n    setSelectedOptions(newSelectedOptions);\n    ariaAnnounce(`Selected ${newSelectedOptions.length} items.`);\n  };\n\n  const handleKeyDown = useKeyboardNavigation(isListboxOpen, listboxRef, handleSelectOption, selectionModel);\n\n  const handleDismissOption = (option) => {\n    const newSelectedOptions = selectedOptions.filter((item) => item !== option);\n    setSelectedOptions(newSelectedOptions);\n    ariaAnnounce(`Removed ${option}. ${newSelectedOptions.length} items remaining.`);\n  };\n\n  return (\n    <div className={styles['multi-select-container']}>\n  <h2>Your Ingredients</h2>\n  <div className={styles['selected-options']}>\n      {selectedOptions.map((option, index) => (\n  <button \n    key={index} \n    onClick={() => handleDismissOption(option)}\n    aria-label={`Remove ${option}`}\n  >\n    {option} &times;\n  </button>\n))}\n      </div>\n      <button onClick={() => setListboxOpen(!isListboxOpen)}>Toggle Listbox</button>\n      {isListboxOpen && (\n        <ul\n          ref={listboxRef}\n          className={styles['listbox']}\n          role=\"listbox\"\n          aria-label=\"Ingredients\"\n          tabIndex=\"0\"\n          onKeyDown={handleKeyDown}\n        >\n          {veganIngredients.map((option, index) => (\n            <li\n              key={index}\n              role=\"option\"\n              aria-selected={selectedOptions.includes(option)}\n              className={classNames(styles['listbox-option'], { [styles['selected']]: selectedOptions.includes(option) })}\n              onClick={() => handleSelectOption(option)}\n              tabIndex=\"-1\" // Ensure list items can receive focus\n            >\n              {option}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nReactMultiSelect.propTypes = {\n  selectionModel: PropTypes.oneOf(['default', 'alternative']),\n};\n\nReactMultiSelect.defaultProps = {\n  selectionModel: 'default',\n};\n\nexport default ReactMultiSelect;"],"names":[],"sourceRoot":""}