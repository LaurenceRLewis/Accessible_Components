{"version":3,"file":"ReactTableSubHeader-ReactTableSubHeader-stories.b8ae5eb67a50c9972d99.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAKA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AAGA;AA7DA;AA+DA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAqBA;AAAA;;AAGA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AAxHA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0HA","sources":["webpack://table---header-with-sub-header/./stories/ReactTableSubHeader/ReactTableSubHeader.js","webpack://table---header-with-sub-header/./stories/ReactTableSubHeader/ReactTableSubheaderControl.js"],"sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport PropTypes from \"prop-types\";\n\n//Props\nconst ReactTableSubHeader = ({\n  colspan,\n  subColspan,\n  headers,\n  data,\n  headerBackgroundColor,\n  headerTextColor,\n  tdFontWeight,\n}) => {\n  return (\n    <table className=\"tl-container-table\">\n      <thead>\n        <tr>\n          {headers.map((header, index) => (\n            <th\n              key={index}\n              className=\"tl-header\"\n              id={header.id}\n              colSpan={colspan[index] > 1 ? colspan[index] : undefined}\n              style={{\n                backgroundColor: headerBackgroundColor,\n                color: headerTextColor,\n              }}\n            >\n              {header.name}\n            </th>\n          ))}\n        </tr>\n        <tr>\n          {headers.map((header, index) =>\n            subColspan[index] > 0 && colspan[index] !== 1 ? (\n              <th\n                key={index}\n                className=\"tl-sub-header\"\n                headers={header.id}\n                colSpan={subColspan[index]}\n              >\n                {header.subName}\n              </th>\n            ) : null\n          )}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={rowIndex} className=\"tl-raw-unfocus\">\n            {row.map((cell, cellIndex) => (\n              //Expression\n              <td\n                key={cellIndex}\n                className=\"tl-data\"\n                style={{ fontWeight: tdFontWeight }}\n              >\n                {cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nReactTableSubHeader.propTypes = {\n  colspan: PropTypes.arrayOf(PropTypes.number).isRequired,\n  subColspan: PropTypes.arrayOf(PropTypes.number).isRequired,\n  headers: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      subName: PropTypes.string,\n    })\n  ).isRequired,\n  data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\n  headerBackgroundColor: PropTypes.string,\n  headerTextColor: PropTypes.string,\n  tdFontWeight: PropTypes.oneOf([400, 700]),\n};\n\nReactTableSubHeader.defaultProps = {\n  headerBackgroundColor: \"inherit\",\n  headerTextColor: \"inherit\",\n  tdFontWeight: 400,\n};\n\nexport default ReactTableSubHeader;\n","import React from \"react\";\n\nconst ReactTableSubheaderControl = ({\n  headerBackgroundColor,\n  headerTextColor,\n  tdFontWeight,\n  thFontWeight,\n}) => {\n  const headers = [\n    { id: \"test-product\", name: \"Test Product\", subName: \"Sub Product\" },\n    { id: \"name\", name: \"Name\" },\n    { id: \"brand\", name: \"Brand\" },\n    { id: \"stock-quantity\", name: \"Stock quantity\", subName: \"Sub quantity\" },\n    { id: \"wholesale-cost\", name: \"Wholesale cost\" },\n    { id: \"quantity-sold\", name: \"Quantity sold\" },\n    { id: \"gross-sales\", name: \"Gross sales\" },\n    { id: \"net-sales\", name: \"Net sales\", subName: \"Combined Sale\" },\n  ];\n\n  const subHeaderRow = [\n    {\n      id: \"sub-product\",\n      colspan: 3,\n      name: \"Sub Product\",\n    },\n    {\n      id: \"sub-quantity\",\n      colspan: 4,\n      name: \"Sub quantity\",\n    },\n    {\n      id: \"combined-sales\",\n      name: \"Combined Sale\",\n    },\n  ];\n\n  const data = [\n    [\n      \"Test Product\",\n      \"124689389\",\n      \"0\",\n      \"$35.00\",\n      \"$60.00\",\n      \"20\",\n      \"$1200.00\",\n      \"$500.00\",\n    ],\n    [\n      \"Test Product\",\n      \"124689332\",\n      \"30\",\n      \"$35.00\",\n      \"$60.00\",\n      \"10\",\n      \"$600.00\",\n      \"$250.00\",\n    ],\n    // ... Add more data rows here\n  ];\n\n  const cellHeaders = [\n    [headers[0].id, subHeaderRow[0].id],\n    [headers[1].id, subHeaderRow[0].id],\n    [headers[2].id, subHeaderRow[0].id],\n    [headers[3].id, subHeaderRow[1].id],\n    [headers[4].id, subHeaderRow[1].id],\n    [headers[5].id, subHeaderRow[1].id],\n    [headers[6].id, subHeaderRow[1].id],\n    [headers[7].id, subHeaderRow[2].id],\n  ];\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            {headers.map(({ id, name }) => (\n              <th\n                className=\"tl-header\"\n                id={id}\n                key={id}\n                style={{\n                  backgroundColor: headerBackgroundColor,\n                  color: headerTextColor,\n                }}\n              >\n                {name}\n              </th>\n            ))}\n          </tr>\n          <tr>\n            {subHeaderRow.map(({ id, colspan, name }) => (\n              <th\n                className=\"tl-sub-header\"\n                id={id}\n                key={id}\n                style={{ fontWeight: thFontWeight }}\n                colSpan={colspan}\n              >\n                {name}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n  {data.map((rowData, rowIndex) => (\n    <tr key={rowIndex}>\n      {rowData.map((cellData, cellIndex) => (\n        <td\n          key={cellIndex}\n          headers={cellHeaders[cellIndex].join(\" \")}\n          style={{ fontWeight: tdFontWeight }}\n        >\n          {cellData}\n        </td>\n      ))}\n    </tr>\n  ))}\n</tbody>\n</table>\n</div>\n);\n};\n\nexport default ReactTableSubheaderControl;"],"names":[],"sourceRoot":""}