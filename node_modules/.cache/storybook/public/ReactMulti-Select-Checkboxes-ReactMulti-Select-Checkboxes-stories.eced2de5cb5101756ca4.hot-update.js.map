{"version":3,"file":"ReactMulti-Select-Checkboxes-ReactMulti-Select-Checkboxes-stories.eced2de5cb5101756ca4.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://table---header-with-sub-header/./stories/ReactMulti-Select-Checkboxes/keyboardNavigation.js"],"sourcesContent":["export const handleKeyboardNavigation = (event, checkboxes, alternativeSelectionModel, updateSelectionState) => {\n  const { key, ctrlKey, shiftKey } = event;\n  const currentIndex = checkboxes.findIndex((checkbox) => checkbox === event.target);\n\n  let newIndex = -1;\n  let shouldUpdateSelection = false;\n\n  if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n    newIndex = currentIndex + 1;\n  } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n    newIndex = currentIndex - 1;\n  } else if (key === \"Home\") {\n    newIndex = 0;\n  } else if (key === \"End\") {\n    newIndex = checkboxes.length - 1;\n  } else if (key === \" \" && !ctrlKey && !shiftKey) {\n    if (!alternativeSelectionModel) {\n      updateSelectionState(event.target, currentIndex);\n    } else {\n      shouldUpdateSelection = true;\n    }\n  } else if (key === \" \" && ctrlKey && !shiftKey) {\n    if (alternativeSelectionModel) {\n      updateSelectionState(event.target, currentIndex);\n    }\n  } else if (key === \" \" && shiftKey) {\n    updateSelectionState(event.target, currentIndex, true);\n  }\n\n  if (newIndex >= 0 && newIndex < checkboxes.length) {\n    event.preventDefault();\n    checkboxes[newIndex].focus();\n\n    if (alternativeSelectionModel && !ctrlKey && !shiftKey) {\n      shouldUpdateSelection = true;\n    } else if (shiftKey) {\n      shouldUpdateSelection = true;\n    }\n\n    if (shouldUpdateSelection) {\n      updateSelectionState(checkboxes[newIndex], newIndex);\n    }\n  }\n};"],"names":[],"sourceRoot":""}