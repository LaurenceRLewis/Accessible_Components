{"version":3,"file":"ReactMulti-Select-Checkboxes-ReactMulti-Select-Checkboxes-stories.a2c03b4981f7b6f79cf5.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAGA;AA3IA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6IA","sources":["webpack://table---header-with-sub-header/./stories/ReactMulti-Select-Checkboxes/ReactMulti-Select-Checkboxes.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport styles from \"./ReactMulti-Select-Checkboxes.module.css\";\nimport ariaAnnounce from \"./ariaAnnounce\";\nimport handleKeyboardNavigation from \"./keyboardNavigation\";\n\nconst ReactMultiSelectCheckboxes = ({ alternativeSelectionModel }) => {\n  const [expanded, setExpanded] = useState(false);\n  const [checkCount, setCheckCount] = useState(0);\n  const catBreedGroup = useRef(null);\n  const checkboxesRef = useRef([]);\n  const totalCheckboxes = 3;\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        catBreedGroup.current &&\n        !catBreedGroup.current.contains(event.target)\n      ) {\n        setExpanded(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    checkboxesRef.current.forEach((checkbox) =>\n      checkbox.addEventListener(\"keydown\", onKeyDown)\n    );\n\n    return () => {\n      checkboxesRef.current.forEach((checkbox) =>\n        checkbox.removeEventListener(\"keydown\", onKeyDown)\n      );\n    };\n  }, []);\n\n  const toggleDisclosure = () => {\n    setExpanded(!expanded);\n  };\n\n  const updateCheckCount = (event) => {\n    const targetCheckbox = event.target;\n    const isChecked = targetCheckbox.checked;\n\n    if (alternativeSelectionModel) {\n      checkboxesRef.current.forEach((checkbox) => {\n        if (checkbox !== targetCheckbox) {\n          checkbox.checked = false;\n        }\n      });\n      targetCheckbox.checked = !isChecked;\n      setCheckCount(!isChecked ? 1 : 0);\n    } else {\n      const newCheckCount = isChecked ? checkCount + 1 : checkCount - 1;\n      setCheckCount(newCheckCount);\n    }\n    ariaAnnounce(`${checkCount} of ${totalCheckboxes} checkboxes checked`);\n  };\n\n  const onKeyDown = (event) => {\n    handleKeyboardNavigation(\n      event,\n      checkboxesRef.current,\n      updateCheckCount,\n      alternativeSelectionModel\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n    <button\n      type=\"button\"\n      aria-expanded={expanded}\n      onClick={toggleDisclosure}\n      aria-controls=\"CatBreedGroup\"\n      className={styles.button}\n    >\n      <span className={styles.icon}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 80 80\"\n          focusable=\"false\"\n        >\n          <path d=\"M70.3 13.8L40 66.3 9.7 13.8z\"></path>\n        </svg>\n      </span>\n      Cat Breeds\n      <span className={styles.counter}>\n        ({checkCount} of {totalCheckboxes} selected)\n      </span>\n    </button>\n    <div\n      role=\"listbox\"\n      aria-labelledby=\"CatBreedGroupTrigger\"\n      id=\"CatBreedGroup\"\n      ref={catBreedGroup}\n      className={expanded ? styles.catBreedGroup : styles.hidden}\n    >\n      <ul>\n        <li>\n          <input\n            type=\"checkbox\"\n            name=\"catBreed\"\n            id=\"catBreed1\"\n            value=\"Bengal\"\n            onChange={updateCheckCount}\n            ref={(el) => (checkboxesRef.current[0] = el)}\n            role=\"option\"\n          />\n          <label htmlFor=\"catBreed1\">Bengal</label>\n        </li>\n        <li>\n          <input\n            type=\"checkbox\"\n            name=\"catBreed\"\n            id=\"catBreed2\"\n            value=\"Siamese\"\n            onChange={updateCheckCount}\n            ref={(el) => (checkboxesRef.current[1] = el)}\n            role=\"option\"\n          />\n          <label htmlFor=\"catBreed2\">Siamese</label>\n        </li>\n        <li>\n          <input\n            type=\"checkbox\"\n            name=\"catBreed\"\n            id=\"catBreed3\"\n            value=\"Maine Coon\"\n            onChange={updateCheckCount}\n            ref={(el) => (checkboxesRef.current[2] = el)}\n            role=\"option\"\n          />\n          <label htmlFor=\"catBreed3\">Maine Coon</label>\n        </li>\n      </ul>\n      {/* Add more cat breeds here */}\n    </div>\n  </div>\n);\n};\n\nexport default ReactMultiSelectCheckboxes;"],"names":[],"sourceRoot":""}