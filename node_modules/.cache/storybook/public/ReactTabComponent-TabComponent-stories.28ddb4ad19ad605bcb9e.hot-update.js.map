{"version":3,"file":"ReactTabComponent-TabComponent-stories.28ddb4ad19ad605bcb9e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAUA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAUA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAYA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA","sources":["webpack://table---header-with-sub-header/./stories/ReactTabComponent/TabComponent.stories.js"],"sourcesContent":["import React from \"react\";\nimport { TabComponent } from \"./TabComponent\";\n\n// export default {\n//   title: \"Components/TabComponent\",\n//   component: TabComponent,\n//   argTypes: {\n//     tabPanelTabindex: {\n//       control: { type: \"boolean\" },\n//     },\n//     textColor: {\n//       control: { type: 'select' },\n//       options: ['red', 'green', 'blue', 'default'],\n//       description: 'Select Tab text colour',\n//     },\n//     tabBackground: { control: { type: \"color\" } },\n//     selectedTabBackground: { control: { type: \"color\" } },\n//     triggerActivation: {\n//       control: { type: \"select\" },\n//       options: { automated: \"automated\", manual: \"manual\" },\n//       defaultValue: \"manual\",\n//     },\n//     tabs: {\n//       control: null,\n//     },\n//   },\n// };\n\nconst Template = (args) => <TabComponent {...args} />;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  tabs: [\n    {\n      id: \"html-009878\",\n      title: \"HTML\",\n      content: (\n        <>\n          <h3>About HTML & Accessibility</h3>\n          <p>\n            Using HTML in web development is vital because it allows for the\n            creation of structured, semantic content that is not only\n            human-readable but also machine-readable. By using appropriate HTML\n            tags and elements, developers can convey the meaning and importance of\n            content, making it easier for search engines to understand and index\n            the information on webpages. Properly structured HTML also benefits\n            accessibility by providing better support for screen readers and other\n            assistive technologies, enabling users with disabilities to access and\n            interact with web content more effectively.\n          </p>\n        </>\n      ),\n    },\n    {\n      id: \"aria-009878\",\n      title: \"ARIA\",\n      content: (\n        <>\n          <h3>About ARIA & Accessibility</h3>\n          <p>\n            ARIA, which stands for Accessible Rich Internet Applications, is a set\n            of attributes designed to enhance the accessibility of web content and\n            applications. By providing additional information about the structure\n            and functionality of elements on a webpage, ARIA helps screen readers\n            and other assistive technologies interpret the content more\n            effectively. The primary goal of ARIA is to bridge the gap between the\n            capabilities of modern web technologies and the requirements of users\n            with disabilities, ensuring that everyone can access and interact with\n            web content.\n          </p>\n        </>\n      ),\n    },\n    {\n      id: \"react-009878\",\n      title: \"REACT\",\n      content: (\n        <>\n          <h3>About REACT & Accessibility</h3>\n          <p>\n            Using React and HTML together to build components has several\n            advantages. First, it simplifies the development process by providing\n            a clear separation of concerns, as each component is responsible for\n            its own logic, state, and presentation. This modularity makes it\n            easier to maintain, test, and refactor the codebase. Second, React's\n            component-based architecture promotes reusability, which can\n            significantly reduce the amount of code duplication and improve the\n            overall maintainability of a project. Finally, the combination of\n            React and HTML enables developers to create more interactive and\n            engaging user interfaces that can adapt to changes in data and state,\n            ultimately enhancing the user experience on the web.\n          </p>\n        </>\n      ),\n    },\n  ],\n  tabPanelTabindex: true,\n  triggerActivation: \"manual\",\n  textColor: \"rgba(0, 0, 0, 1)\",\n  tabBackground: \"rgba(209, 203, 219, 1)\",\n  selectedTabBackground: \"rgba(156, 39, 176, 1)\",\n};\n"],"names":[],"sourceRoot":""}