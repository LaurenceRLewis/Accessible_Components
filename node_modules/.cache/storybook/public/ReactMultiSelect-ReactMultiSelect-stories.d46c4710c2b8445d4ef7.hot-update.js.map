{"version":3,"file":"ReactMultiSelect-ReactMultiSelect-stories.d46c4710c2b8445d4ef7.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AAEA","sources":["webpack://table---header-with-sub-header/./stories/ReactMultiSelect/keyboardNavigation.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useKeyboardNavigation = (isListboxOpen, listboxRef, handleSelectOption, selectionModel) => {\n  const [focusedOptionIndex, setFocusedOptionIndex] = useState(0);\n\n  useEffect(() => {\n    if (isListboxOpen) {\n      listboxRef.current.focus();\n    }\n  }, [isListboxOpen, listboxRef]);\n\n  const handleKeyDown = (event) => {\n    const { key } = event;\n    const options = Array.from(listboxRef.current.children);\n    let newIndex;\n\n    switch (key) {\n      case 'ArrowUp':\n        event.preventDefault();\n        newIndex = focusedOptionIndex - 1 >= 0 ? focusedOptionIndex - 1 : options.length - 1;\n        options[newIndex].focus();\n        setFocusedOptionIndex(newIndex);\n        break;\n      \n      case 'ArrowDown':\n        event.preventDefault();\n        newIndex = focusedOptionIndex + 1 < options.length ? focusedOptionIndex + 1 : 0;\n        options[newIndex].focus();\n        setFocusedOptionIndex(newIndex);\n        break;\n      \n      case 'Home':\n        event.preventDefault();\n        options[0].focus();\n        setFocusedOptionIndex(0);\n        break;\n      \n      case 'End':\n        event.preventDefault();\n        options[options.length - 1].focus();\n        setFocusedOptionIndex(options.length - 1);\n        break;\n      \n      case ' ':\n      case 'Enter':\n        event.preventDefault();\n        handleSelectOption(options[focusedOptionIndex].textContent);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return handleKeyDown;\n};\n\nexport default useKeyboardNavigation;"],"names":[],"sourceRoot":""}